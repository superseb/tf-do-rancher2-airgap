#!/bin/bash
export curlimage=appropriate/curl
export jqimage=stedolan/jq

if [ -L /dev/disk/by-id/scsi-0DO_Volume_${prefix}-rancherproxy-volume ]; then
  mkdir /opt/docker-registry
  echo "/dev/disk/by-id/scsi-0DO_Volume_${prefix}-rancherproxy-volume /opt/docker-registry ext4 defaults,nofail,discard,noatime 0 2" >> /etc/fstab
  mount -a
fi

curl https://releases.rancher.com/install-docker/19.03.sh | sh

echo '{"insecure-registries": ["${prefix}-registry.${domain}:5000"]}' > /etc/docker/daemon.json
service docker restart

IP="$(curl -s http://169.254.169.254/metadata/v1/interfaces/private/0/ipv4/address)"
docker run --name squid -d --restart=always --publish $IP:3128:3128 --volume /srv/docker/squid/cache:/var/spool/squid3 datadog/squid:latest

cd /root
curl https://gist.githubusercontent.com/superseb/b2c1d6c9baa32609a49ee117a27bc700/raw/7cb196e974e13b213ac6ec3105971dd5e21e4c66/selfsignedcert.sh | bash -s -- ${prefix}-registry.${domain}

if [ "${registry_auth}" = "true" ]; then
  mkdir -p /root/auth
  docker run --entrypoint htpasswd httpd -Bbn testuser testpassword > /root/auth/htpasswd

  # Run Docker registry
  docker run -d -p $IP:5000:5000 --restart=always --name registry -e "REGISTRY_AUTH=htpasswd" -e "REGISTRY_AUTH_HTPASSWD_REALM=Registry Realm" -e REGISTRY_AUTH_HTPASSWD_PATH=/auth/htpasswd -e REGISTRY_HTTP_TLS_CERTIFICATE=/certs/cert.pem -e REGISTRY_HTTP_TLS_KEY=/certs/key.pem -v /root/certs:/certs -v /root/auth:/auth -v /opt/docker-registry:/var/lib/registry registry:2

  # Login to registry
  while [ ! -f /root/.docker/config.json ]; do docker login --username=testuser --password=testpassword ${prefix}-registry.${domain}:5000; sleep 5; done

  # Mirror rancher images
  docker run -v /root/.docker/config.json:/root/.docker/config.json -v /var/run/docker.sock:/var/run/docker.sock superseb/rancher2img:latest ${prefix}-registry.${domain}:5000 ${rancher_version}
else
  # Run Docker registry
  docker run -d -p $IP:5000:5000 --restart=always --name registry -e REGISTRY_HTTP_TLS_CERTIFICATE=/certs/cert.pem -e REGISTRY_HTTP_TLS_KEY=/certs/key.pem -v /root/certs:/certs -v /opt/docker-registry:/var/lib/registry registry:2

  while true; do curl --noproxy '*' -sk https://${prefix}-registry.${domain}:5000/v2/ && break; echo "waiting on registry"; sleep 5; done

  # Mirror rancher images
  docker run -v /var/run/docker.sock:/var/run/docker.sock superseb/rancher2img:latest ${prefix}-registry.${domain}:5000 ${rancher_version}
fi

# Mirror needed utils for cluster creation
for image in $curlimage $jqimage; do
  until docker inspect $image > /dev/null 2>&1; do
    docker pull $image
    docker tag $image ${prefix}-registry.${domain}:5000/$image
    docker push ${prefix}-registry.${domain}:5000/$image
    sleep 2
  done
done

# Mirror latest k8s version in KDM
latestk8s=$(curl -sL https://raw.githubusercontent.com/rancher/kontainer-driver-metadata/release-v2.5/data/data.json | docker run -i stedolan/jq -r '.K8sVersionRKESystemImages | keys[]' | sort -V | tail -1 | awk -F'-' '{print $1"-"$2 }')
latestk8simage="rancher/hyperkube:$latestk8s"
until docker inspect $latestk8simage > /dev/null 2>&1; do
  docker pull $latestk8simage
  docker tag $latestk8simage ${prefix}-registry.${domain}:5000/$latestk8simage
  docker push ${prefix}-registry.${domain}:5000/$latestk8simage
  sleep 2
done

o# system charts
# reachable at http://${prefix}-registry.${domain}:9999/system-charts.git
#mkdir /var/tmp/git
#git clone https://github.com/rancher/system-charts /var/tmp/git/system-charts
#
#docker run -d -v /var/tmp/git:/var/lib/initial -p $IP:9999:80 cirocosta/gitserver-http
