#!/bin/bash
set -x
export curlimage=${prefix}-registry.${domain}:5000/appropriate/curl
export jqimage=${prefix}-registry.${domain}:5000/stedolan/jq

while ! nc -z ${proxy_address} 3128; do sleep 0.1; done 
echo "Acquire::http::Proxy \"http://${proxy_address}:3128\";" > /etc/apt/apt.conf.d/02proxy
echo "proxy = ${proxy_address}:3128" > ~/.curlrc
echo "noproxy = 127.0.0.1,localhost,169.254.169.254" >> ~/.curlrc
curl https://releases.rancher.com/install-docker/${docker_version_agent}.sh | sh
echo '{"insecure-registries": ["${prefix}-registry.${domain}:5000"]}' > /etc/docker/daemon.json
service docker restart

if [ "${registry_auth}" = "true" ]; then
  while [ ! -f /root/.docker/config.json ]; do echo testpassword | docker login --username=testuser --password-stdin ${prefix}-registry.${domain}:5000; sleep 5; done
else
  while true; do curl --noproxy '*' -sk https://${prefix}-registry.${domain}:5000/v2/ && break; echo "waiting on registry"; sleep 5; done
fi

if [ `command -v curl` ]; then
  curl -sL https://releases.rancher.com/install-docker/${docker_version_agent}.sh | sh
elif [ `command -v wget` ]; then
  wget -qO- https://releases.rancher.com/install-docker/${docker_version_agent}.sh | sh
fi

for image in $curlimage $jqimage; do
  until docker inspect $image > /dev/null 2>&1; do
    docker pull $image
    sleep 2
  done
done

until docker inspect ${prefix}-registry.${domain}:5000/rancher/rancher-agent:${rancher_version} > /dev/null 2>&1; do
  docker pull ${prefix}-registry.${domain}:5000/rancher/rancher-agent:${rancher_version}
  sleep 2
done

while true; do
  docker run --rm $curlimage -sLk https://${prefix}-rancherprivate.${domain}/ping && break
  sleep 5
done

# Login
while true; do

    LOGINRESPONSE=$(docker run \
        --rm \
        $curlimage \
        -s "https://${prefix}-rancherprivate.${domain}/v3-public/localProviders/local?action=login" -H 'content-type: application/json' --data-binary '{"username":"admin","password":"${admin_password}"}' --insecure)
    LOGINTOKEN=$(echo $LOGINRESPONSE | docker run --rm -i $jqimage -r .token)

    if [ "$LOGINTOKEN" != "null" ]; then
        break
    else
        sleep 5
    fi
done

# Test if cluster is created
while true; do
  CLUSTERID=$(docker run \
    --rm \
    $curlimage \
      -sLk \
      -H "Authorization: Bearer $LOGINTOKEN" \
      "https://${prefix}-rancherprivate.${domain}/v3/clusters?name=${cluster_name}" | docker run --rm -i $jqimage -r '.data[].id')

  if [ -n "$CLUSTERID" ]; then
    break
  else
    sleep 5
  fi
done

# Get token
# Test if cluster is created
while true; do
  AGENTCMD=$(docker run \
    --rm \
    $curlimage \
      -sLk \
      -H "Authorization: Bearer $LOGINTOKEN" \
      "https://${prefix}-rancherprivate.${domain}/v3/clusterregistrationtoken?clusterId=$CLUSTERID" | docker run --rm -i $jqimage -r '.data[].nodeCommand' | head -1)

  if [ -n "$AGENTCMD" ]; then
    break
  else
    sleep 5
  fi
done

ROLEFLAG="all-roles"

# Combine command and flags
COMPLETECMD="$AGENTCMD --$ROLEFLAG"

# Run command
$COMPLETECMD
